{"ast":null,"code":"var _jsxFileName = \"/home/winstone/reactchef/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RecipeList from './components/RecipeList';\nimport './css/app.css'; // import uuidv4 from 'uuid/v4'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = 'reactchef.recipes';\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) setRecipes(JSON.parse(recipeJSON));\n  }, []);\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete\n  };\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: 'New',\n      servings: 1,\n      cookTime: '1:00',\n      instructions: 'instr.',\n      ingredients: [{\n        id: Date.now().toString(),\n        name: 'Name',\n        amount: '1 Tbs'\n      }]\n    };\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: recipeContextValue,\n    children: /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWlzeHOLqTLzoAcmjiIgqQuaAuc=\");\n\n_c = App;\nconst sampleRecipes = [{\n  id: 1,\n  name: 'Plain Chicken',\n  servings: 3,\n  cookTime: '0:45',\n  instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n  ingredients: [{\n    id: 1,\n    name: 'Chicken',\n    amount: '2 pounds'\n  }, {\n    id: 2,\n    name: 'Salt',\n    amount: '0.5 Tbs'\n  }]\n}, {\n  id: 2,\n  name: 'Plain Pork',\n  servings: 5,\n  cookTime: '0:45',\n  instructions: \"1. Put salt on Paprika\\n2. Put Pork in pot\\n3. Eat Pork\",\n  ingredients: [{\n    id: 1,\n    name: 'Pork',\n    amount: '1 kg'\n  }, {\n    id: 2,\n    name: 'Salt',\n    amount: '1 Tbs'\n  }]\n}];\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/winstone/reactchef/src/App.js"],"names":["React","useState","useEffect","RecipeList","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","recipes","setRecipes","sampleRecipes","localStorage","setItem","JSON","stringify","recipeJSON","getItem","parse","recipeContextValue","handleRecipeAdd","handleRecipeDelete","newRecipe","id","Date","now","toString","name","servings","cookTime","instructions","ingredients","amount","filter","recipe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport RecipeList from './components/RecipeList'\nimport './css/app.css'\n// import uuidv4 from 'uuid/v4'\n\nexport const RecipeContext = React.createContext()\nconst LOCAL_STORAGE_KEY = 'reactchef.recipes'\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes)\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(recipes))\n  }, [recipes])\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if(recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\n  }, [])\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: 'New',\n      servings: 1,\n      cookTime: '1:00',\n      instructions: 'instr.',\n      ingredients: [\n        { id: Date.now().toString(), name: 'Name', amount: '1 Tbs'}\n      ]\n  \n    }\n    setRecipes([...recipes, newRecipe])\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id!==id))\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList \n        recipes={recipes} />\n\n    </RecipeContext.Provider>\n  \n    \n  );\n\n  \n}\n\n\n\nconst sampleRecipes = [\n  {\n  id: 1,\n  name: 'Plain Chicken',\n  servings: 3,\n  cookTime: '0:45',\n  instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n  ingredients: [\n    {\n      id: 1,\n      name: 'Chicken',\n      amount: '2 pounds'\n    },\n    {\n      id: 2,\n      name: 'Salt',\n      amount: '0.5 Tbs'\n    }\n  ]\n  \n},\n  {\n    id: 2,\n    name: 'Plain Pork',\n    servings: 5,\n    cookTime: '0:45',\n    instructions: \"1. Put salt on Paprika\\n2. Put Pork in pot\\n3. Eat Pork\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Pork',\n        amount: '1 kg'\n      },\n      {\n        id: 2,\n        name: 'Salt',\n        amount: '1 Tbs'\n      }\n    ]\n    },\n\n]\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}