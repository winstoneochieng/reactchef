{"ast":null,"code":"import _toConsumableArray from\"/home/winstone/reactchef/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/winstone/reactchef/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import RecipeIngredientsEdit from'./RecipeIngredientsEdit';import{RecipeContext}from'../App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RecipeEdit(_ref){var recipe=_ref.recipe;var _useContext=useContext(RecipeContext),handleRecipeChange=_useContext.handleRecipeChange,handleRecipeSelect=_useContext.handleRecipeSelect;function handleChange(changes){handleRecipeChange(recipe.id,_objectSpread(_objectSpread({},recipe),changes));}function handleIngredientChange(id,ingredient){var newIngredients=_toConsumableArray(recipe.ingredients);var index=newIngredients.findIndex(function(i){return i.id===id;});newIngredients[index]=ingredient;handleChange({ingredients:newIngredients});}function handleIngredientAdd(){var newIngredient={id:Date.now().toString(),name:'',amount:''};handleChange({ingredients:[].concat(_toConsumableArray(recipe.ingredients),[newIngredient])});}function handleIngredientDelete(id){handleChange({ingredients:recipe.ingredients.filter(function(i){return i.id!==id;})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipe-edit__remove-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn recipe-edit__remove-button\",onClick:function onClick(){return handleRecipeSelect(undefined);},children:\"\\xD7\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit__details-grid\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"recipe-edit__label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",id:\"name\",className:\"recipe-edit__input\",value:recipe.name,onInput:function onInput(e){return handleChange({name:e.target.value});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cookTime\",className:\"recipe-edit__label\",children:\"Cook TimecookTime\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"cookTime\",id:\"cookTime\",className:\"recipe-edit__input\",value:recipe.cookTime,onInput:function onInput(e){return handleChange({cookTime:e.target.value});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"servings\",className:\"recipe-edit__label\",children:\"Servings\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"servings\",id:\"servings\",min:\"1\",className:\"recipe-edit__input\",value:recipe.servings,onInput:function onInput(e){return handleChange({servings:parseInt(e.target.value)||''});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"instructions\",className:\"recipe-edit__label\",children:\"Instructions\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"instructions\",id:\"instructions\",className:\"recipe-edit__input\",value:recipe.instructions,onInput:function onInput(e){return handleChange({instructions:e.target.value});}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{className:\"recipe-edit__label\",children:\"Ingredients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit_ingredient-grid\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"div\",{}),recipe.ingredients.map(function(ingredient){return/*#__PURE__*/_jsx(RecipeIngredientsEdit,{handleIngredientChange:handleChange,handleIngredientDelete:handleIngredientDelete,ingredient:ingredient},ingredient.id);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-edit__add-ingredient-btn-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--primary\",onClick:function onClick(){return handleIngredientAdd();},children:\"Add Ingredient\"})})]});}","map":{"version":3,"sources":["/home/winstone/reactchef/src/components/RecipeEdit.js"],"names":["React","useContext","RecipeIngredientsEdit","RecipeContext","RecipeEdit","recipe","handleRecipeChange","handleRecipeSelect","handleChange","changes","id","handleIngredientChange","ingredient","newIngredients","ingredients","index","findIndex","i","handleIngredientAdd","newIngredient","Date","now","toString","name","amount","handleIngredientDelete","filter","undefined","e","target","value","cookTime","servings","parseInt","instructions","map"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport RecipeIngredientsEdit from './RecipeIngredientsEdit'\nimport { RecipeContext } from '../App'\n\nexport default function RecipeEdit({ recipe }) {\n    const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext)\n\n    function handleChange(changes) {\n        handleRecipeChange(recipe.id, {...recipe, ...changes})\n    }\n\n    function handleIngredientChange(id, ingredient){\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i => i.id === id)\n        newIngredients[index] = ingredient\n        handleChange({ ingredients: newIngredients })\n    }\n\n    function handleIngredientAdd() {\n        const newIngredient = {\n            id:Date.now().toString(),\n            name: '',\n            amount: ''\n        }\n        handleChange({ingredients: [...recipe.ingredients, newIngredient] })\n    }\n\n    function handleIngredientDelete(id) {\n        handleChange({ ingredients: recipe.ingredients.filter(i => i.id !== id)})\n    }\n\n    return (\n        <div className=\"recipe-edit\">\n            <div className=\"recipe-edit__remove-button-container\">\n                <button className=\"btn recipe-edit__remove-button\" onClick={() => handleRecipeSelect(undefined)}>&times;</button>\n            </div>\n            <div className=\"recipe-edit__details-grid\">\n                <label htmlFor=\"name\" className=\"recipe-edit__label\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" className=\"recipe-edit__input\" value={recipe.name} onInput={e => handleChange({ name: e.target.value })}/>\n                <label htmlFor=\"cookTime\" className=\"recipe-edit__label\" >Cook TimecookTime</label>\n                <input type=\"text\" name=\"cookTime\" id=\"cookTime\" className=\"recipe-edit__input\" value={recipe.cookTime}onInput={e => handleChange({ cookTime: e.target.value })}/>\n                <label htmlFor=\"servings\" className=\"recipe-edit__label\">Servings</label>\n                <input type=\"number\" name=\"servings\" id=\"servings\" min=\"1\" className=\"recipe-edit__input\" value={recipe.servings} onInput={e => handleChange({ servings: parseInt(e.target.value) || '' })}/>\n                <label htmlFor=\"instructions\" className=\"recipe-edit__label\">Instructions</label>\n                <textarea name=\"instructions\" id=\"instructions\" className=\"recipe-edit__input\" value={recipe.instructions} onInput={e => handleChange({ instructions: e.target.value })}></textarea>\n            </div>\n            <br />\n            <label className=\"recipe-edit__label\">Ingredients</label>\n            <div className=\"recipe-edit_ingredient-grid\">\n                <div>Name</div>\n                <div>Amount</div>\n                <div></div>\n                {recipe.ingredients.map(ingredient => (\n                    <RecipeIngredientsEdit \n                    key={ingredient.id} \n                    handleIngredientChange={handleChange}\n                    handleIngredientDelete={handleIngredientDelete}\n                    ingredient={ingredient}\n                    />\n                ))}    \n                                               \n            </div>\n            <div className=\"recipe-edit__add-ingredient-btn-container\">\n                <button className=\"btn btn--primary\" onClick={() => handleIngredientAdd()}>Add Ingredient</button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}